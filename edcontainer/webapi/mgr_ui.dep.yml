##Deployment部署文件
apiVersion: apps/v1     #接口版本
kind: Deployment        #接口类型
metadata:   
  name: mgrui           ##depolymet名称
  namespace: edapi     #命名空间
  labels:
    app: mgrui          #标签
spec:
  selector:
    matchLabels:
      app: mgrui
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0     #更新时候最大无效pod数量
      maxSurge: 1           #更新时候每次最多增加pod数量
  template:
    metadata:
      labels:
        app: mgrui      #模板名称必填
    spec:               #定义容器模板，该模板可以包含多个容器
      containers:
      - name: mgrui     #镜像名称
        resources:      #CPU内存限制
          limits:
            cpu: 500m
            memory: 600Mi
          requests:
            cpu: 250m
            memory: 300Mi
        image: gcr.io/rd-test-64435/sg_nginx:v22.2.24.1   #镜像地址
        #如果command和args均没有写，那么用Docker默认的配置。
        #如果command写了，但args没有写，那么Docker默认的配置会被忽略而且仅仅执行.yaml文件的command（不带任何参数的）。
        #如果command没写，但args写了，那么Docker默认配置的ENTRYPOINT的命令行会被执行，但是调用的参数是.yaml中的args。
        #如果如果command和args都写了，那么Docker默认的配置被忽略，使用.yaml的配置。
        imagePullPolicy: IfNotPresent  #如果不存在则拉取
        ports:           
        - containerPort: 80    #对service暴露端口
      imagePullSecrets:
      - name: img-secret
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: mgrui
  namespace: edapi
spec:
  maxReplicas: 10
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mgrui
  targetCPUUtilizationPercentage: 95
---
#定义对外访问的服务名字和端口
apiVersion: v1
kind: Service
metadata:
  name: mgrui-svc       #服务名字
  namespace: edapi     #命名空间
spec:
  selector:
    app: mgrui          #
  type: NodePort
  ports:
  - protocol: TCP   
    port: 9001  
    targetPort: 80
    name: edapi
